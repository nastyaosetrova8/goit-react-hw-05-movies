{"version":3,"file":"static/js/556.1275ecc0.chunk.js","mappings":"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","sources":["components/MovieItem/MovieItem.js","components/SharedLayout/SharedLayout.styled.js","components/MovieItem/Movie.jsx","pages/MovieDetails.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieStyled = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const AditionalStyled = styled.div`\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  box-shadow: 0px 6px 5px #888, 0px 0 5px #888;\n  padding: 0 16px;\n  color: #040464;\n  font-size: 16px;\n`;\n\nexport const ButtonBack = styled.button`\n  padding: 8px 16px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: white;\n  background-color: #040464;\n  cursor: pointer;\n\n  &.hover,\n  &.focus {\n    background-color: #282881;\n  }\n`;\n\nexport const FormStyled = styled.form`\ndisplay: flex;\nalign-items: center;\n  input {\n    width: 300px;\n    height: 28px;\n    font-size: 16px;\n  }\n\n  button {\n    padding: 10px 16px;\n    border-radius: 4px;\n    border: none;\n    color: white;\n    background-color: #040464;\n    cursor: pointer;\n  }\n`;\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Section = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 24px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n  box-shadow: 0 6px 6px -6px #222;\n\n  > nav {\n    display: flex;\n  }\n`;\n\n\nexport const NavLinkStyled = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: #040464;\n  }\n`;","import PropTypes from 'prop-types';\nimport { Link, Outlet } from 'react-router-dom';\nimport { AditionalStyled, MovieStyled } from './MovieItem';\nimport { Section } from 'components/SharedLayout/SharedLayout.styled';\n\nconst Movie = ({ movie }) => {\n  return (\n    <Section>\n      <MovieStyled>\n      <img\n        src={`https://image.tmdb.org/t/p/w400${movie.poster_path}`}\n        alt={movie.title}\n      />\n      <div>\n      <h2>\n        {movie.title} ({movie.release_date.substring(0, 4)})\n      </h2>\n      <p>User Score: {Math.round(movie.vote_average * 10)}%</p>\n      <h3>OverView</h3>\n      <p>{movie.overview}</p>\n      <h3>Genres</h3>\n      <span>\n        {movie.genres.map(({name}) => name).join(', ')}\n      </span>\n      </div>\n      </MovieStyled>\n      <AditionalStyled>\n      <p>Additional information</p>\n      <ul>\n    <li><Link to=\"cast\"> Cast </Link></li>\n    <li> <Link to=\"reviews\"> Reviews </Link></li>\n</ul>\n</AditionalStyled>\n<Outlet /> \n    </Section>\n  );\n};\n\n\nMovie.propTypes = {\n  movie: PropTypes.shape({\n    poster_path: PropTypes.string,\n    title: PropTypes.string,\n    release_date: PropTypes.string,\n    vote_average: PropTypes.number,\n    overview: PropTypes.string,\n    genres: PropTypes.array,\n  }).isRequired,\n}\n\nexport default Movie;\n\n","import Loader from 'components/Loader/Loader';\nimport Movie from 'components/MovieItem/Movie';\nimport { ButtonBack } from 'components/MovieItem/MovieItem';\nimport { useEffect, useRef, useState } from 'react';\nimport { Link, useLocation, useParams } from 'react-router-dom';\nimport { requestDetailsMovie } from 'services/api';\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [movie, setMovie] = useState(null);\n  const { movieId } = useParams();\n  const location = useLocation();\n\n  const backLinkRef = useRef(location.state?.from);\n\n  useEffect(() => {\n    const fetchMovieDetails = async () => {\n      try {\n        setIsLoading(true);\n        const mov = await requestDetailsMovie(movieId);\n        setMovie(mov);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    movieId && fetchMovieDetails();\n  }, [movieId]);\n\n  return (\n    <div>\n      {error && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {isLoading && (\n        <div>\n          <Loader />\n        </div>\n      )}\n      \n        <Link to={backLinkRef.current ?? '/'}> <ButtonBack type='button'>Go back</ButtonBack></Link>\n      \n      {movie && <Movie movie={movie} />}\n    </div>\n  );\n};\n\nexport default MovieDetails;\n","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params:{\n        api_key: 'e245788edd56336101811c52ff98db13',\n    }\n});\n\n\nexport const requestTrendingMovies = async () => {\n    const {data} = await instance.get('/trending/movie/day');\n    return data;\n}; \n\nexport const requestSearchMovie = async (query) => {\n    const {data} = await instance.get(`/search/movie?query=${query}`);\n    return data;\n}; \n\nexport const requestDetailsMovie = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}`);\n    return data;\n};\n\nexport const requestCredits = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n};\n\nexport const requestReviews = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n};","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["MovieStyled","styled","AditionalStyled","ButtonBack","FormStyled","Section","Header","NavLinkStyled","NavLink","movie","src","poster_path","alt","title","release_date","substring","Math","round","vote_average","overview","genres","map","name","join","to","useState","isLoading","setIsLoading","error","setError","setMovie","movieId","useParams","location","useLocation","backLinkRef","useRef","state","from","useEffect","fetchMovieDetails","requestDetailsMovie","mov","message","Loader","current","type","instance","axios","baseURL","params","api_key","requestTrendingMovies","get","data","requestSearchMovie","query","requestCredits","requestReviews","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties","value"],"sourceRoot":""}