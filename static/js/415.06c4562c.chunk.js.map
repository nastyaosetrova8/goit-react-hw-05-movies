{"version":3,"file":"static/js/415.06c4562c.chunk.js","mappings":"wKAoCA,IAjCmB,SAAC,GAAoB,IAAlBA,EAAiB,EAAjBA,WACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAkBC,MAAMC,QAAQL,IAAeA,EAAWM,OAAS,EAEzE,OACE,0BACE,wBACGH,GACCH,EAAWO,KAAI,SAAAC,GACb,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAMT,GAAWU,GAAE,kBAAaH,EAAMI,IAApD,SACGJ,EAAMK,SAFFL,EAAMI,GAMlB,OAIV,C,yHCoBD,UAvCa,WACX,OAAoCE,EAAAA,EAAAA,UAAS,IAA7C,eAAOd,EAAP,KAAmBe,EAAnB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,oGAEhBJ,GAAa,GAFG,UAGMK,EAAAA,EAAAA,MAHN,OAGVC,EAHU,OAIhBR,EAAcQ,EAAQC,SAJN,gDAMhBL,EAAS,KAAMM,SANC,yBAQhBR,GAAa,GARG,4EAAH,qDAWjBI,GACD,GAAE,KAGD,gCACE,wBAAI,mBACHH,IACC,0BACE,yBAAG,sCAAoCA,OAG1CF,GACC,0BACE,SAAC,IAAD,OAGF,SAAC,IAAD,CAAYhB,WAAYA,MAI/B,C,yLCvCK0B,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAO,CACHC,QAAS,sCAKJR,EAAqB,mCAAG,sGACZI,EAASK,IAAI,uBADD,uBAC1BC,EAD0B,EAC1BA,KAD0B,kBAE1BA,GAF0B,2CAAH,qDAKrBC,EAAkB,mCAAG,WAAOC,GAAP,yFACTR,EAASK,IAAT,8BAAoCG,IAD3B,uBACvBF,EADuB,EACvBA,KADuB,kBAEvBA,GAFuB,2CAAH,sDAKlBG,EAAmB,mCAAG,WAAOC,GAAP,yFACVV,EAASK,IAAT,iBAAuBK,IADb,uBACxBJ,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,sDAKnBK,EAAc,mCAAG,WAAOD,GAAP,yFACLV,EAASK,IAAT,iBAAuBK,EAAvB,aADK,uBACnBJ,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdM,EAAc,mCAAG,WAAOF,GAAP,yFACLV,EAASK,IAAT,iBAAuBK,EAAvB,aADK,uBACnBJ,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,qD","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx","services/api.js"],"sourcesContent":["import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n\n  const showMoviesList =  Array.isArray(moviesList) && moviesList.length > 0;\n\n  return (\n    <div>\n      <ul>\n        {showMoviesList &&\n          moviesList.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link state={{from: location}} to={`/movies/${movie.id}`}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default MoviesList;\n\n\n","import Loader from 'components/Loader/Loader';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport React, { useEffect, useState } from 'react';\nimport { requestTrendingMovies } from 'services/api';\n\nconst Home = () => {\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchMovies = async () => {\n      try {\n        setIsLoading(true);\n        const movList = await requestTrendingMovies();\n        setMoviesList(movList.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchMovies();\n  }, []);\n\n  return (\n    <section>\n      <h1>Trending today</h1>\n      {error && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {isLoading ? (\n        <div>\n          <Loader />\n        </div>\n      ) : (\n        <MoviesList moviesList={moviesList} />\n      )}\n    </section>\n  );\n};\n\nexport default Home;\n","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params:{\n        api_key: 'e245788edd56336101811c52ff98db13',\n    }\n});\n\n\nexport const requestTrendingMovies = async () => {\n    const {data} = await instance.get('/trending/movie/day');\n    return data;\n}; \n\nexport const requestSearchMovie = async (query) => {\n    const {data} = await instance.get(`/search/movie?query=${query}`);\n    return data;\n}; \n\nexport const requestDetailsMovie = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}`);\n    return data;\n};\n\nexport const requestCredits = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n};\n\nexport const requestReviews = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n};"],"names":["moviesList","location","useLocation","showMoviesList","Array","isArray","length","map","movie","state","from","to","id","title","useState","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","fetchMovies","requestTrendingMovies","movList","results","message","instance","axios","baseURL","params","api_key","get","data","requestSearchMovie","query","requestDetailsMovie","movieId","requestCredits","requestReviews"],"sourceRoot":""}