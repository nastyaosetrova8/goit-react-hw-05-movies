{"version":3,"file":"static/js/134.ecda3aa8.chunk.js","mappings":"+QAEaA,EAAcC,EAAAA,GAAAA,IAAH,gFAMXC,EAAkBD,EAAAA,GAAAA,IAAH,uMASfE,EAAaF,EAAAA,GAAAA,OAAH,+QAgBVG,EAAaH,EAAAA,GAAAA,KAAH,0S,wDCAvB,IA9BmB,SAAC,GAAoB,IAAlBI,EAAiB,EAAjBA,WACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,0BACE,wBACGF,EAAWG,KAAI,SAAAC,GACZ,OACE,yBACE,SAAC,KAAD,CAAMC,MAAO,CAACC,KAAML,GAAWM,GAAE,kBAAaH,EAAMI,IAApD,SACGJ,EAAMK,SAFFL,EAAMI,GAMlB,OAIV,C,+IClBYE,EAAUd,EAAAA,GAAAA,IAAH,oFAMPe,EAASf,EAAAA,GAAAA,OAAH,2QAgBNgB,GAAgBhB,EAAAA,EAAAA,IAAOiB,EAAAA,GAAPjB,CAAH,4M,uJCgD1B,UAjEe,WACb,OAAkCkB,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAA4BJ,EAAAA,EAAAA,UAAS,IAArC,eAAOK,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,EAAcF,EAAaG,IAAI,UAErCC,EAAAA,EAAAA,YAAU,WACR,GAAKF,EAAL,CAEA,IAAMG,EAAiB,mCAAG,oGAEtBX,GAAa,GAFS,UAGGY,EAAAA,EAAAA,IAAmBJ,GAHtB,OAGhBK,EAHgB,OAKtBT,EAAUS,EAAWC,SALC,gDAOtBZ,EAAS,KAAMa,SAPO,yBAStBf,GAAa,GATS,4EAAH,qDAYvBW,GAdwB,CAezB,GAAE,CAACH,IASJ,OACE,UAAC,KAAD,YACE,UAAC,KAAD,CAAYQ,SATC,SAAAC,GACfA,EAAMC,iBACN,IAAMC,EAAcF,EAAMG,OAAOC,SAASC,OAAOC,MAC1B,KAAvBJ,EAAYK,QACZjB,EAAgB,CAAEkB,MAAON,GAC1B,EAIG,WACE,kBACEO,KAAK,OACLC,aAAa,KACbC,WAAS,EACTC,YAAY,gBACZC,KAAK,SACLC,aAAcvB,KAEhB,mBAAQkB,KAAK,SAAb,SAAsB,cAGvBzB,IACC,0BACE,yBAAG,sCAAoCA,OAG1CF,IACC,0BACE,SAAC,IAAD,OAIH,OAANI,QAAM,IAANA,OAAA,EAAAA,EAAQ6B,QAAS,IAChB,SAAC,IAAD,CAAYhD,WAAYmB,MAIzB,C,yLCpEK8B,E,QAAWC,EAAAA,OAAa,CAC1BC,QAAS,+BACTC,OAAO,CACHC,QAAS,sCAKJC,EAAqB,mCAAG,sGACZL,EAASxB,IAAI,uBADD,uBAC1B8B,EAD0B,EAC1BA,KAD0B,kBAE1BA,GAF0B,2CAAH,qDAKrB3B,EAAkB,mCAAG,WAAOa,GAAP,yFACTQ,EAASxB,IAAT,8BAAoCgB,IAD3B,uBACvBc,EADuB,EACvBA,KADuB,kBAEvBA,GAFuB,2CAAH,sDAKlBC,EAAmB,mCAAG,WAAOC,GAAP,yFACVR,EAASxB,IAAT,iBAAuBgC,IADb,uBACxBF,EADwB,EACxBA,KADwB,kBAExBA,GAFwB,2CAAH,sDAKnBG,EAAc,mCAAG,WAAOD,GAAP,yFACLR,EAASxB,IAAT,iBAAuBgC,EAAvB,aADK,uBACnBF,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,sDAKdI,EAAc,mCAAG,WAAOF,GAAP,yFACLR,EAASxB,IAAT,iBAAuBgC,EAAvB,aADK,uBACnBF,EADmB,EACnBA,KADmB,kBAEnBA,GAFmB,2CAAH,qD,sBC/BZ,SAASK,EAAuBC,EAASC,GAKtD,OAJKA,IACHA,EAAMD,EAAQE,MAAM,IAGfC,OAAOC,OAAOD,OAAOE,iBAAiBL,EAAS,CACpDC,IAAK,CACHvB,MAAOyB,OAAOC,OAAOH,MAG3B,C","sources":["components/MovieItem/MovieItem.js","components/MoviesList/MoviesList.jsx","components/SharedLayout/SharedLayout.styled.js","pages/Movies.jsx","services/api.js","../node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const MovieStyled = styled.div`\n  display: flex;\n  gap: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const AditionalStyled = styled.div`\n  border-top: 1px solid black;\n  border-bottom: 1px solid black;\n  box-shadow: 0px 6px 5px #888, 0px 0 5px #888;\n  padding: 0 16px;\n  color: #040464;\n  font-size: 16px;\n`;\n\nexport const ButtonBack = styled.button`\n  padding: 8px 16px;\n  margin-bottom: 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  font-weight: 500;\n  color: white;\n  background-color: #040464;\n  cursor: pointer;\n\n  &.hover,\n  &.focus {\n    background-color: #282881;\n  }\n`;\n\nexport const FormStyled = styled.form`\ndisplay: flex;\nalign-items: center;\n  input {\n    width: 300px;\n    height: 28px;\n    font-size: 16px;\n  }\n\n  button {\n    padding: 10px 16px;\n    border-radius: 4px;\n    border: none;\n    color: white;\n    background-color: #040464;\n    cursor: pointer;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\n\nconst MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <div>\n      <ul>\n        {moviesList.map(movie => {\n            return (\n              <li key={movie.id}>\n                <Link state={{from: location}} to={`/movies/${movie.id}`}>\n                  {movie.title}\n                </Link>\n              </li>\n            );\n          })}\n      </ul>\n    </div>\n  );\n};\n\n\nMoviesList.propTypes = {\n  moviesList: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n}\n\nexport default MoviesList;\n\n\n","import styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nexport const Section = styled.div`\n  max-width: 960px;\n  margin: 0 auto;\n  padding: 0 24px;\n`;\n\nexport const Header = styled.header`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 12px;\n  padding: 8px 0;\n  margin-bottom: 16px;\n  border-bottom: 1px solid black;\n  box-shadow: 0 6px 6px -6px #222;\n\n  > nav {\n    display: flex;\n  }\n`;\n\n\nexport const NavLinkStyled = styled(NavLink)`\n  padding: 8px 16px;\n  border-radius: 4px;\n  text-decoration: none;\n  color: black;\n  font-weight: 500;\n\n  &.active {\n    color: white;\n    background-color: #040464;\n  }\n`;","import Loader from 'components/Loader/Loader';\nimport { FormStyled } from 'components/MovieItem/MovieItem';\nimport MoviesList from 'components/MoviesList/MoviesList';\nimport { Section } from 'components/SharedLayout/SharedLayout.styled';\nimport React, { useEffect, useState } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { requestSearchMovie } from 'services/api';\n\nconst Movies = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const searchQuery = searchParams.get('query');\n\n  useEffect(() => {\n    if (!searchQuery) return;\n\n    const fetchSearchResult = async () => {\n      try {\n        setIsLoading(true);\n        const moviesData = await requestSearchMovie(searchQuery);\n\n        setMovies(moviesData.results);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchSearchResult();\n  }, [searchQuery]);\n\n  const onSubmit = event => {\n    event.preventDefault();\n    const searchValue = event.target.children.search.value;\n    searchValue.trim() !== '' &&\n    setSearchParams({ query: searchValue });\n  };\n\n  return (\n    <Section>\n      <FormStyled onSubmit={onSubmit}>\n        <input\n          type=\"text\"\n          autoComplete=\"on\"\n          autoFocus\n          placeholder=\"Search movies\"\n          name=\"search\"\n          defaultValue={searchQuery}\n        />\n        <button type=\"submit\">Search</button>\n      </FormStyled>\n\n      {error && (\n        <div>\n          <p>Opps, some error occured... Error: {error}</p>\n        </div>\n      )}\n      {isLoading && (\n        <div>\n          <Loader />\n        </div>\n      )}\n\n{movies?.length > 0 && (\n  <MoviesList moviesList={movies} />\n)}   \n    </Section>\n  );\n};\n\nexport default Movies;\n\n\n","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    baseURL: 'https://api.themoviedb.org/3',\n    params:{\n        api_key: 'e245788edd56336101811c52ff98db13',\n    }\n});\n\n\nexport const requestTrendingMovies = async () => {\n    const {data} = await instance.get('/trending/movie/day');\n    return data;\n}; \n\nexport const requestSearchMovie = async (query) => {\n    const {data} = await instance.get(`/search/movie?query=${query}`);\n    return data;\n}; \n\nexport const requestDetailsMovie = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}`);\n    return data;\n};\n\nexport const requestCredits = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}/credits`);\n    return data;\n};\n\nexport const requestReviews = async (movieId) => {\n    const {data} = await instance.get(`/movie/${movieId}/reviews`);\n    return data;\n};","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}"],"names":["MovieStyled","styled","AditionalStyled","ButtonBack","FormStyled","moviesList","location","useLocation","map","movie","state","from","to","id","title","Section","Header","NavLinkStyled","NavLink","useState","isLoading","setIsLoading","error","setError","movies","setMovies","useSearchParams","searchParams","setSearchParams","searchQuery","get","useEffect","fetchSearchResult","requestSearchMovie","moviesData","results","message","onSubmit","event","preventDefault","searchValue","target","children","search","value","trim","query","type","autoComplete","autoFocus","placeholder","name","defaultValue","length","instance","axios","baseURL","params","api_key","requestTrendingMovies","data","requestDetailsMovie","movieId","requestCredits","requestReviews","_taggedTemplateLiteral","strings","raw","slice","Object","freeze","defineProperties"],"sourceRoot":""}